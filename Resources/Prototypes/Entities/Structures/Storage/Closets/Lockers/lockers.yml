- type: entity
  id: LockerBooze
  parent: LockerBase
  name: liquor cabinet # Stellar
  description: This is where the bartender keeps the booze.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: cabinet # Begin Stellar - Lockers
    # stateDoorOpen: cabinet_open
    # stateDoorClosed: cabinet_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/cabinet.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["Bar"]]
  - type: EntityStorage
    closeSound:
      path: /Audio/Effects/woodenclosetclose.ogg
    openSound:
      path: /Audio/Effects/woodenclosetopen.ogg
  - type: Paintable
    group: null # not shaped like other lockers

# Basic
- type: entity
  id: LockerSteel
  parent: LockerBaseSecure
  name: secure closet
  # components: # Begin Stellar - Lockers
  # - type: Appearance
  # - type: EntityStorageVisuals
  #   stateBaseClosed: secure
  #   stateDoorOpen: secure_open
  #   stateDoorClosed: secure_door # Begin Stellar - Lockers

# Cargo
- type: entity
  id: LockerQuarterMaster
  parent: LockerBaseSecure
  name: quartermaster's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: qm # Begin Stellar - Lockers
    # stateDoorOpen: qm_open
    # stateDoorClosed: qm_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-cargo.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["Quartermaster"]]

- type: entity
  id: LockerSalvageSpecialist
  parent: LockerBase
  name: salvage specialist's locker # Stellar - Lockers
  description: Nevermind the pickaxe.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: mining # Begin Stellar - Lockers
    # stateDoorOpen: mining_open
    # stateDoorClosed: mining_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-cargo-salvage.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["Salvage"]]

# Command
- type: entity
  id: LockerCaptain
  parent: LockerBaseSecure
  name: captain's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: cap # Begin Stellar - Lockers
    # stateDoorOpen: cap_open
    # stateDoorClosed: cap_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-captain.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["Captain"]]

- type: entity
  id: LockerHeadOfPersonnel
  parent: LockerBaseSecure
  name: head of personnel's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: hop # Begin Stellar - Lockers
    # stateDoorOpen: hop_open
    # stateDoorClosed: hop_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-service.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["HeadOfPersonnel"]]

# CE
- type: entity
  id: LockerChiefEngineer
  parent: LockerBaseSecure
  name: chief engineer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: ce # Begin Stellar - Lockers
    # stateDoorOpen: ce_open
    # stateDoorClosed: ce_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-engineering.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "ChiefEngineer" ] ]

# Electrical supplies
- type: entity
  id: LockerElectricalSupplies
  parent: LockerBase
  name: electrical supplies locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: eng # Begin Stellar - Lockers
    # stateDoorOpen: eng_open
    # stateDoorClosed: eng_elec_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-engineering-electrical.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Welding supplies
- type: entity
  id: LockerWeldingSupplies
  parent: LockerBase
  name: welding supplies locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: eng # Begin Stellar - Lockers
    # stateDoorOpen: eng_open
    # stateDoorClosed: eng_weld_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-engineering-welding.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Atmos tech
- type: entity
  id: LockerAtmospherics
  parent: LockerBase
  name: atmospheric technician's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: atmos # Begin Stellar - Lockers
    # stateDoorOpen: atmos_open
    # stateDoorClosed: atmos_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-engineering-atmos.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Atmospherics" ] ]

# Engineer
- type: entity
  id: LockerEngineer
  parent: LockerBase
  name: engineer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: eng_secure # Begin Stellar - Lockers
    # stateDoorOpen: eng_secure_open
    # stateDoorClosed: eng_secure_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-engineering.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Evac Repair
- type: entity
  parent: LockerBase
  id: LockerEvacRepair
  name: DEPRECATED  # Begin Stellar - Lockers
  description: DEPRECATED
  # components:
  # - type: Appearance
  # - type: EntityStorageVisuals
  #   stateBaseClosed: eng
  #   stateDoorOpen: eng_open
  #   stateDoorClosed: eng_evac_door
  # - type: AccessReader
  #   access: [ [ "Engineering" ] ] # End Stellar - Lockers

# Freezer
- type: entity
  id: LockerFreezerBase
  parent: LockerBase
  name: freezer
  suffix: No Access
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: freezer # Begin Stellar - Lockers
    # stateDoorOpen: freezer_open
    # stateDoorClosed: freezer_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-freezer.rsi # End Stellar - Lockers
  - type: ExplosionResistance
    damageCoefficient: 0.50
  - type: AntiRottingContainer
  - type: Construction
    graph: ClosetFreezer
    node: done
    containers:
    - entity_storage
  - type: Paintable
    group: null

- type: entity
  id: LockerFreezer
  parent: LockerFreezerBase
  name: freezer
  suffix: Kitchen, Locked
  components:
  - type: AccessReader
    access: [ [ "Kitchen" ] ]

# Botanist
- type: entity
  id: LockerBotanist
  parent: LockerBase
  name: botanist's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: hydro # Begin Stellar - Lockers
    # stateDoorOpen: hydro_open
    # stateDoorClosed: hydro_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-botany.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Hydroponics" ] ]

# Medicine
- type: entity
  id: LockerMedicine
  parent: LockerBase
  name: medicine locker
  description: Filled to the brim with medical junk.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: med # Begin Stellar - Lockers
    # stateDoorOpen: med_open
    # stateDoorClosed: med_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-medical.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Medical" ] ]

# Medical doctor
- type: entity
  id: LockerMedical
  parent: LockerBase
  name: medical doctor's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: med_secure # Begin Stellar - Lockers
    # stateDoorOpen: med_secure_open
    # stateDoorClosed: med_secure_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-medical-doctor.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Medical" ] ]

# Paramedic
- type: entity
  id: LockerParamedic
  parent: LockerBase
  name: paramedic's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: paramed # Begin Stellar - Lockers
    # stateDoorOpen: paramed_open
    # stateDoorClosed: paramed_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-medical-paramedic.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Medical" ] ]


# Chemical
- type: entity
  id: LockerChemistry
  parent: LockerBase
  name: chemical locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: med # Begin Stellar - Lockers
    # stateDoorOpen: med_open
    # stateDoorClosed: chemical_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-medical-chemistry.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Chemistry" ] ]

# CMO
- type: entity
  id: LockerChiefMedicalOfficer
  parent: LockerBaseSecure
  name: head of medicine's locker # Stellar
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: cmo # Begin Stellar - Lockers
    # stateDoorOpen: cmo_open
    # stateDoorClosed: cmo_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-medical.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "ChiefMedicalOfficer" ] ]

# Science
- type: entity
  id: LockerResearchDirector
  parent: LockerBase
  name: research director's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: rd # Begin Stellar - Lockers
    # stateDoorOpen: rd_open
    # stateDoorClosed: rd_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-science.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "ResearchDirector" ] ]

- type: entity
  id: LockerScientist
  parent: LockerBase
  name: scientist's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: science # Begin Stellar - Lockers
    # stateDoorOpen: science_open
    # stateDoorClosed: science_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-science.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [ [ "Research" ] ]

# HoS
- type: entity
  id: LockerHeadOfSecurity
  parent: LockerBaseSecure
  name: head of security's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: hos # Begin Stellar - Lockers
    # stateDoorOpen: hos_open
    # stateDoorClosed: hos_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-command-security.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["HeadOfSecurity"]]

# Warden
- type: entity
  id: LockerWarden
  parent: LockerBaseSecure
  name: warden's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: warden # Begin Stellar - Lockers
    # stateDoorOpen: warden_open
    # stateDoorClosed: warden_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-security-warden.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["Armory"]]

# Brigmedic
- type: entity
  id: LockerBrigmedic
  parent: LockerBaseSecure
  name: DEPRECATED # Stellar - Lockers
  description: DEPRECATED # Stellar - Lockers
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: brigmedic # Begin Stellar - Lockers
    # stateDoorOpen: armory_open
    # stateDoorClosed: brigmedic_door # End Stellar - Lockers
  - type: AccessReader
    access: [["Medical"]]

# Security Officer
- type: entity
  id: LockerSecurity
  parent: LockerBaseSecure
  name: security officer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: sec # Begin Stellar - Lockers
    # stateDoorOpen: sec_open
    # stateDoorClosed: sec_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-security.rsi # End Stellar - Lockers
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: GunSafe
  parent: LockerBaseSecure
  name: gun safe
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    # stateBaseClosed: shotguncase # Begin Stellar - Lockers
    # stateDoorOpen: shotguncase_open
    # stateDoorClosed: shotguncase_door
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-gunsafe.rsi # End Stellar - Lockers
  - type: AccessReader
  - type: Construction
    graph: GunSafe
    node: done
    containers:
    - entity_storage
  - type: StaticPrice
    price: 660

- type: entity
  id: GunSafeBaseSecure
  parent: GunSafe
  suffix: Armory, Locked
  components:
  - type: AccessReader
    access: [["Armory"]]

# Genpop Storage
- type: entity
  id: GenpopBase
  abstract: true
  components:
  - type: GenpopLocker
  - type: EntityStorageVisuals
    stateBaseClosed: base # Begin Stellar - Lockers
    stateDoorOpen: door-open
    stateDoorClosed: door-closed
  - type: Sprite
    sprite: _ST/Tileset/Storage/Lockers/secure-genpop.rsi # End Stellar - Lockers
  - type: UserInterface
    interfaces:
      enum.GenpopLockerUiKey.Key:
        type: GenpopLockerBoundUserInterface
  - type: AccessReader # note! this access is for the UI, not the door. door access is handled on GenpopLocker
    access: [["Security"]]
  - type: Lock
    locked: false
    useAccess: false
  - type: EntityStorage
    open: True
    removedMasks: 20
  - type: PlaceableSurface
    isPlaceable: True

- type: entity
  parent: [ GenpopBase , LockerBaseSecure ]
  id: LockerPrisoner
  name: prisoner closet
  description: It's a secure locker for an inmate's personal belongings during their time in prison.
  suffix: 1
  components:
  - type: Fixtures
    fixtures:
      fix1:
        shape: !type:PolygonShape
          radius: 0.01
          vertices:
          - -0.25,-0.48
          - 0.25,-0.48
          - 0.25,0.48
          - -0.25,0.48
        mask:
        - Impassable
        - TableLayer
        - LowImpassable
        layer:
        - BulletImpassable
        - Opaque
        density: 75
        hard: True
        restitution: 0
        friction: 0.4

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner2
  suffix: 2
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_2

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner3
  suffix: 3
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_3

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner4
  suffix: 4
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_4

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner5
  suffix: 5
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_5

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner6
  suffix: 6
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_6

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner7
  suffix: 7
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_7

- type: entity
  parent: LockerPrisoner
  id: LockerPrisoner8
  suffix: 8
  components:
  - type: EntityStorageVisuals
    stateDoorClosed: genpop_door_8

# Detective
- type: entity
  id: LockerDetective
  parent: LockerBooze
  name: detective's cabinet
  description: Usually cold and empty... like your heart.
  components:
  - type: AccessReader
    access: [["Detective"]]

- type: entity
  id: LockerEvidence
  parent: LockerSecurity
  name: evidence locker
  description: To store bags of bullet casings and detainee belongings.
  components:
  - type: AccessReader
    access: [["Security"]]

# Syndicate
- type: entity
  id: LockerSyndicatePersonal
  parent: LockerBaseSecure # Begin Stellar - Lockers
  name: DEPRECATED
  description: DEPRECATED
  # components:
  # - type: Appearance
  # - type: EntityStorageVisuals
  #   stateBaseClosed: syndicate
  #   stateDoorOpen: syndicate_open
  #   stateDoorClosed: syndicate_door # End Stellar - Lockers

# Bluespace
- type: entity
  id: LockerBluespaceStation
  name: bluespace locker
  suffix: once to station
  parent: LockerSyndicatePersonal
  description: Advanced locker technology.
  components:
    - type: ArrivalsBlacklist
    - type: BluespaceLocker
      minBluespaceLinks: 1
      behaviorProperties:
        delay: 1
        actOnOpen: false
        bluespaceEffectOnInit: true
        bluespaceEffectOnTeleportSource: true
        bluespaceEffectOnTeleportTarget: true
        destroyAfterUses: 1
        destroyAfterUsesMinItemsToCountUse: 1
        destroyType: Delete
      autoLinksUseProperties: true
      autoLinkProperties:
        actOnOpen: false
        actOnClose: false
        destroyAfterUses: 2
        destroyType: DeleteComponent

# Clown
- type: entity
  id: LockerClown
  parent: LockerBaseSecure # Begin Stellar - Lockers
  name: DEPRECATED
  description: DEPRECATED
  # components:
  # - type: Appearance
  # - type: AccessReader
  #   access: [["Theatre"]]
  # - type: EntityStorageVisuals
    # stateBaseClosed: clown
    # stateDoorOpen: clown_open
    # stateDoorClosed: clown_door # End Stellar - Lockers


# Mime
- type: entity
  id: LockerMime
  parent: LockerBaseSecure # Begin Stellar - Lockers
  name: DEPRECATED
  description: DEPRECATED
  # components:
  # - type: Appearance
  # - type: AccessReader
  #   access: [["Theatre"]]
  # - type: EntityStorageVisuals
    # stateBaseClosed: mime
    # stateDoorOpen: mime_open
    # stateDoorClosed: mime_door # End Stellar - Lockers

# Representative
- type: entity
  id: LockerRepresentative
  parent: LockerBaseSecure # Begin Stellar - Lockers
  name: DEPRECATED
  description: DEPRECATED
  # components:
  # - type: Appearance
  # - type: AccessReader
  #   access: [["Command"]]
  # - type: EntityStorageVisuals
    # stateBaseClosed: hop
    # stateDoorOpen: hop_open
    # stateDoorClosed: representative_door # End Stellar - Lockers
